name: Try-Securepacks

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Desired name for the Docker image'
        required: true
      repo_url:
        description: 'GitHub repository URL'
        required: true
      desired_directory:
        description: 'Desired directory to build from (optional, leave empty to use current directory)'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Clone specified repository
      run: |
        git clone ${{ github.event.inputs.repo_url }} repo 

    - name: Set up environment variable for directory
      id: set-dir
      run: |
        if [ -z "${{ github.event.inputs.desired_directory }}" ]; then
          echo "dir=repo" >> $GITHUB_ENV
        else
          echo "dir=repo/${{ github.event.inputs.desired_directory }}" >> $GITHUB_ENV
        fi

    - name: Change to the desired directory
      run: |
        cd ${{ env.dir }}
        echo "Current directory: $(pwd)"

    - name: Check for main.go and index.html
      id: check-files
      run: |
        cd ${{ env.dir }}
        if [ -f "main.go" ]; then
          echo "app_type=go" >> $GITHUB_ENV
        elif [ -f "index.html" ]; then
          echo "app_type=static_site" >> $GITHUB_ENV
        else
          echo "app_type=nodejs" >> $GITHUB_ENV
        fi

    - name: Install Pack CLI
      run: |
        sudo add-apt-repository ppa:cncf-buildpacks/pack-cli -y
        sudo apt-get update
        sudo apt-get install pack-cli -y

    - name: Set default Pack CLI builder
      run: |
        pack config default-builder initializbuildpacks/securepacks

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image using Buildpacks
      run: |
        image_name_with_tag="${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.image_name }}:latest"
        cd ${{ env.dir }}
        
        if [ "${{ env.app_type }}" == "go" ]; then
          echo "Building a Go application..."
          pack build $image_name_with_tag
        elif [ "${{ env.app_type }}" == "static_site" ]; then
          echo "Building a static site..."
          pack build $image_name_with_tag --buildpack initializ-buildpacks/web-servers \
                                          --env BP_WEB_SERVER=nginx \
                                          --env BP_WEB_SERVER_ROOT=/workspace
        else
          echo "Building a Node.js application with static site generation..."
          pack build $image_name_with_tag --buildpack initializ-buildpacks/web-servers \
                                          --env BP_NODE_RUN_SCRIPTS=build \
                                          --env BP_WEB_SERVER=nginx \
                                          --env BP_WEB_SERVER_ROOT=build
        fi

        docker push $image_name_with_tag
